<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>基于hexo和github的搭建个人博客教程</title>
    <url>/2020/03/12/BuildABlog/</url>
    <content><![CDATA[<h2 id="配置环境"><a href="#配置环境" class="headerlink" title="配置环境"></a>配置环境</h2><ul>
<li><p>Node的安装</p>
<ul>
<li><p><a href="https://nodejs.org/en/" target="_blank" rel="noopener">Node官方下载</a></p>
</li>
<li><p>进入node下载地址后，选择<strong>LTS</strong>版本进行下载<a id="more"></a></p>
<p><img src="/2020/03/12/BuildABlog/node.png" alt="node的下载"></p>
</li>
<li><p>下载安装，根据指示进行即可。安装完成之后，可使用命令：<code>node -v</code>来查看版本号，若出现对应版本号，则安装成功。</p>
<p><img src="/2020/03/12/BuildABlog/node_v.png" alt="版本号"></p>
</li>
</ul>
</li>
<li><p>Git的安装</p>
<ul>
<li><p><a href="https://git-scm.com/downloads/" target="_blank" rel="noopener">Git官方下载</a></p>
</li>
<li><p>根据电脑系统选择相应的版本进行下载，然后一路next就行</p>
</li>
<li><p>安装完成后，可通过命令：<code>git version</code>来查看是否安装成功</p>
<p><img src="/2020/03/12/BuildABlog/git.png" alt="git版本"></p>
</li>
</ul>
</li>
</ul>
<ul>
<li><p>npm的安装</p>
<ul>
<li><p>由于npm在国内下载速度较慢，因选用淘宝镜像进行下载</p>
<ul>
<li><p>可通过命令：<code>npm install -g cnpm --registry=http://registry.npm.taobao.org</code>进行安装</p>
<p><img src="/2020/03/12/BuildABlog/npm.png" alt="npm的下载"></p>
</li>
<li><p>也可以打开Git Bash，输入<code>npm config set registry https://registry.npm.taobao.org</code>命令进行安装</p>
<p><img src="/2020/03/12/BuildABlog/npm_gitbash.png" alt="npm下载"></p>
</li>
</ul>
</li>
<li><p>安装完成后，可通过命令<code>cnpm -v</code>查看安装是否完成</p>
<p><img src="/2020/03/12/BuildABlog/npm_v.png" alt="npm版本"></p>
</li>
</ul>
</li>
<li><p>hexo的安装</p>
<ul>
<li><p>通过命令<code>cnpm install -g hexo-cil</code>进行安装，需要等待一段漫长的时间。</p>
<p><img src="/2020/03/12/BuildABlog/hexo.png" alt="hexo安装"></p>
</li>
<li><p>安装完成后，通过命令<code>hexo -v</code>查看是否安装成功</p>
<p><img src="/2020/03/12/BuildABlog/hexo_v.png" alt="hexo版本"></p>
</li>
</ul>
</li>
</ul>
<hr>
<h2 id="搭建博客"><a href="#搭建博客" class="headerlink" title="搭建博客"></a>搭建博客</h2><ul>
<li><p>初始化</p>
<p>创建或者选择一个文件夹作为存放自己博客的位置，然后在文件夹中打开<strong>Git Bash</strong>，通过命令<code>hexo init</code>进行初始化。如果初始化失败，那么就清空文件夹，重新进行初始化即可</p>
<p><img src="/2020/03/12/BuildABlog/hexo_init.png" alt="hexo初始化"></p>
<p>成功后会生成如下一些文件</p>
<p><img src="/2020/03/12/BuildABlog/hexo_init_finish.png" alt="hexo初始化成功"></p>
</li>
<li><p>启动本地博客</p>
<p>上述过程完成后，我们就可以启动博客了，依旧在博客文件夹下打开<strong>Git Bash</strong>，然后输入命令<code>hexo s</code>，通过网址<code>http://localhost:4000</code>即可访问我们亲手搭建好的博客</p>
<p><img src="/2020/03/12/BuildABlog/hexo_s.png" alt="hexo s命令"></p>
<p><img src="/2020/03/12/BuildABlog/hexo_s_4000.png" alt="4000"></p>
</li>
</ul>
<hr>
<h2 id="将博客部署到github"><a href="#将博客部署到github" class="headerlink" title="将博客部署到github"></a>将博客部署到github</h2><ul>
<li><p>Github创建仓库</p>
<p>我们需要在GitHub上新建一个仓库来存放我们的博客。注意仓库的名称有特定的格式要求，必须是个人昵称+github.io，之后我们就可以用这个地址去访问我们的博客。</p>
<ul>
<li><p>首先需要拥有<strong>github</strong>账号，没有的号进入<a href="https://github.com/" target="_blank" rel="noopener">github官网</a>进行注册</p>
</li>
<li><p>在个人主页右上角，点击New repository创建</p>
<p><img src="/2020/03/12/BuildABlog/new_rep.png" alt="创建"></p>
</li>
<li><p>然后在<strong>Repository name</strong>填上个人昵称+github.io，再点击下方<strong>Create repository</strong>按钮就能创建好仓库</p>
<p><img src="/2020/03/12/BuildABlog/rep.png" alt="repository"></p>
</li>
</ul>
</li>
<li><p>将Git和Github账号绑定</p>
<ul>
<li><p>打开<strong>Git Bash</strong>，设置user.name和user.email配置信息</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git config --global user.name &quot;你的GitHub用户名&quot;</span><br><span class="line">git config --global user.email &quot;你的GitHub注册邮箱&quot;</span><br></pre></td></tr></table></figure>
</li>
<li><p>使用以下命令生成ssh密钥文件，然后直接三个回车，即默认不需要设置密码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;你的GitHub注册邮箱&quot;</span><br></pre></td></tr></table></figure>
</li>
<li><p>生成时会说明.ssh文件夹的位置，打开.ssh文件夹中的<strong>id_rsa.pub</strong>文件(可用记事本打开)，然后复制所有内容</p>
</li>
<li><p>进入<strong>Github</strong>中<a href="https://github.com/settings/ssh/new" target="_blank" rel="noopener">添加密钥</a>的网页，Title可随意填写，并把刚才<strong>id_rsa.pub</strong>文件的内容粘贴到Key里面，点击<strong>Add SSH key</strong>按钮即可</p>
<p><img src="/2020/03/12/BuildABlog/key.png" alt="key"></p>
</li>
<li><p>在<strong>Git bash</strong>中检测公钥是否设置成功，输入命令<code>ssh git@github.com</code>，若出现如下所示，则说明成功</p>
<p><img src="/2020/03/12/BuildABlog/ssh.png" alt="公钥设置成功"></p>
</li>
</ul>
</li>
<li><p>配置博客</p>
<ul>
<li><p>在博客所在文件夹安装一个Git支持插件，打开<strong>Git Bash</strong>用命令<code>npm install hexo-deployer-git --save</code></p>
</li>
<li><p>然后打开你的博客文件夹的<strong>_config.yml</strong>文件，修改文件最后的<strong>deploy</strong>属性，修改为：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https:&#x2F;&#x2F;github.com&#x2F;YourGithubName&#x2F;YourGithubName.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure>

<p>其中<strong>YourGithubName</strong>是你<strong>Github</strong>的名字</p>
</li>
<li><p>然后再打开<strong>Git Bash</strong>，输入下面命令即可</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo hexo generate &#x2F;&#x2F;可以换成hexo g</span><br><span class="line">hexo server &#x2F;&#x2F;可以换成hexo s </span><br><span class="line">hexo deploy &#x2F;&#x2F;可以替换成 hexo d</span><br></pre></td></tr></table></figure>

<p>其中<code>hexo s</code>命令为可选，上面有说到。<code>hexo d</code>命令则是同步到<strong>Github</strong>上，同时你的博客就会更新，第一次输入完，会让你输入github账号和密码，输入完成即可。</p>
</li>
</ul>
</li>
</ul>
<hr>
<h2 id="博客主题的更换"><a href="#博客主题的更换" class="headerlink" title="博客主题的更换"></a>博客主题的更换</h2><p>进入<strong>hexo</strong>官网的<a href="https://hexo.io/themes/" target="_blank" rel="noopener">主题</a>中，挑选自己喜欢的主题，再按照文档说明进行设置即可</p>
<hr>
<p>悄咪咪提一下，本文借鉴文章“<a href="[https://jeislu.github.io/2020/03/09/%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%8D%9A%E5%AE%A2/](https://jeislu.github.io/2020/03/09/如何搭建一个博客/)">如何搭建一个博客</a>”和“<a href="[https://sabot1203.github.io/2020/03/07/%E5%9F%BA%E4%BA%8Ehexo%E6%A1%86%E6%9E%B6%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA/](https://sabot1203.github.io/2020/03/07/基于hexo框架个人博客的搭建/)">基于hexo框架个人博客的搭建</a>”</p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>个人</tag>
        <tag>学习</tag>
        <tag>教程</tag>
        <tag>hexo</tag>
        <tag>github</tag>
      </tags>
  </entry>
  <entry>
    <title>Markdown的学习笔记</title>
    <url>/2020/03/12/MarkdownStudy/</url>
    <content><![CDATA[<h2 id="Markdown的说明"><a href="#Markdown的说明" class="headerlink" title="Markdown的说明"></a>Markdown的说明</h2><p>Markdown是一种轻量型标记语言，是一种可以使用普通文本编辑器编写的标记语言，通过简单的标记语法，它可以使普通文本内容具有一定的格式。</p>
<p><em>个人推荐使用Typora进行markdown的编辑，理由是，师姐推荐用的！！！</em><a id="more"></a></p>
<h2 id="Markdown的语法"><a href="#Markdown的语法" class="headerlink" title="Markdown的语法"></a>Markdown的语法</h2><h3 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h3><p>使用#号标记，即在标题前加#号，并且根据#号的多少来区分标题的等级，一级标题对应一个#号，二级对应两个，依此类推，markdown只有到六级标题。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 一级标题</span><br><span class="line">## 二级标题</span><br><span class="line">### 三级标题</span><br><span class="line">#### 四级标题</span><br><span class="line">##### 五级标题</span><br><span class="line">###### 六级标题</span><br></pre></td></tr></table></figure>

<p>效果如下：</p>
<h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><hr>
<h3 id="字体样式"><a href="#字体样式" class="headerlink" title="字体样式"></a>字体样式</h3><ul>
<li>斜体：用一对 * 或 _ 把文本括起来</li>
<li>粗体：用一对 ** 或 __ 把文本括起来</li>
<li>粗斜体：用一对 *** 或 ___ 把文本括起来</li>
<li>删除线：用一对 ~~ 把文本括起来</li>
<li>下划线：用HTML的 <u> 标签实现，在文本前加 <u> ，在文本后加 </u></u></li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">*斜体*</span><br><span class="line">**粗体**</span><br><span class="line">***粗斜体***</span><br><span class="line">~~删除线~~</span><br><span class="line">&lt;u&gt;下划线&lt;&#x2F;u&gt;</span><br></pre></td></tr></table></figure>

<p>效果如下：</p>
<p><em>斜体</em><br><strong>粗体</strong><br><strong><em>粗斜体</em></strong><br><del>删除线</del><br><u>下划线</u></p>
<hr>
<h3 id="脚注、引用和分割线"><a href="#脚注、引用和分割线" class="headerlink" title="脚注、引用和分割线"></a>脚注、引用和分割线</h3><ul>
<li><p>脚注：对文本的补充说明，格式为<code>[^要注明的文本]</code></p>
<p>for example：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">我们是[^中国人]。</span><br><span class="line"></span><br><span class="line">[^中国人]：指“具有中华人民共和国国籍的人”。</span><br></pre></td></tr></table></figure>

<p>效果如下：</p>
<p>我们是[^中国人]。</p>
<p>[^中国人]：指“具有中华人民共和国国籍的人”。</p>
</li>
<li><p>引用：在段落开头使用&gt;加一个空格，并且可以多层嵌套</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt; one</span><br><span class="line">&gt; one</span><br><span class="line"></span><br><span class="line">&gt; one</span><br><span class="line">&gt; &gt; two</span><br><span class="line">&gt; &gt; &gt; three</span><br></pre></td></tr></table></figure>

<p>效果如下：</p>
<blockquote>
<p>one<br>one</p>
</blockquote>
<blockquote>
<p>one</p>
<blockquote>
<p>two</p>
<blockquote>
<p>three</p>
</blockquote>
</blockquote>
</blockquote>
</li>
<li><p>分割线：在一行中使用三个以上的 * 、 - 或 _ 建立分割线</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">***</span><br><span class="line"></span><br><span class="line">* * *</span><br><span class="line"></span><br><span class="line">******</span><br></pre></td></tr></table></figure>

<p>效果如下：</p>
<hr>
<hr>
<hr>
</li>
</ul>
<hr>
<h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><ul>
<li><p>无序列表：使用 * 、 + 或 - 作为标记</p>
</li>
<li><p>有序列表：使用数字加 . 来表示</p>
</li>
<li><p>列表嵌套：在子列表前添加四个空格</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">* one</span><br><span class="line">+ two</span><br><span class="line">- three</span><br><span class="line"></span><br><span class="line">1. one</span><br><span class="line">2. two</span><br><span class="line"></span><br><span class="line">- first</span><br><span class="line">    - one</span><br><span class="line">    - two</span><br></pre></td></tr></table></figure>

<p>效果如下：</p>
<ul>
<li>one</li>
</ul>
<ul>
<li>two</li>
</ul>
<ul>
<li>three</li>
</ul>
<ol>
<li>one</li>
<li>two</li>
</ol>
<ul>
<li>first<ul>
<li>one</li>
<li>two</li>
</ul>
</li>
</ul>
</li>
</ul>
<hr>
<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><ul>
<li><p>代码片段：用反引号包括起来(`)</p>
</li>
<li><p>代码区块：用三个反引号包裹</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#96;int x &#x3D; 250&#96;代码</span><br><span class="line"></span><br><span class="line">（三个反引号位置）</span><br><span class="line">int x &#x3D; 250;</span><br><span class="line">printf(&quot;%d&quot;,x);</span><br><span class="line">（三个反引号位置）</span><br></pre></td></tr></table></figure>

<p>效果如下：</p>
<p><code>int x = 250</code>代码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">int x &#x3D; 250;</span><br><span class="line">printf(&quot;%d&quot;,x);</span><br></pre></td></tr></table></figure>

</li>
</ul>
<hr>
<h3 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h3><p>点击跳转页面，格式为 [链接名称] (链接地址)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[bilibili](https:&#x2F;&#x2F;www.bilibili.com&#x2F;)</span><br></pre></td></tr></table></figure>

<p>效果如下：</p>
<p><a href="https://www.bilibili.com/" target="_blank" rel="noopener">bilibili</a></p>
<hr>
<h3 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h3><p>语法：![注释] (图片地址 ”可选标题“)</p>
<p>说明：markdown添加图片有三种方式，本地、网络、base64，由于第三种较麻烦，因此只介绍前面两种</p>
<ul>
<li><p>添加本地图片</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">![注释](&#x2F;home&#x2F;picture&#x2F;1.png)</span><br></pre></td></tr></table></figure>

<p>但因为是本地的，不能分享，因此只能在自己电脑上才能显示</p>
</li>
<li><p>添加网络图片</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">![萝卜](https:&#x2F;&#x2F;s2.ax1x.com&#x2F;2020&#x2F;03&#x2F;11&#x2F;8kaFxI.png)</span><br></pre></td></tr></table></figure>

<p><img src="https://s2.ax1x.com/2020/03/11/8kaFxI.png" alt="萝卜"></p>
<p>由于图片在网络上的，所以需要把你所要展示的图片先放到网络，这就需要用到图床</p>
<hr>
<p><strong>Typora快捷键：</strong>Ctrl+Shift+I</p>
<p>说明：在 Hexo中 插入图片时，请按照以下的步骤进行设置</p>
<ol>
<li><p>将<strong>站点配置文件</strong>中的 <code>post_asset_folder</code> 选项的值设置为 true</p>
</li>
<li><p>在站点文件夹中打开 <strong>git bash</strong>，输入命令 <code>npm install hexo-asset-image --save</code> 安装插件</p>
</li>
<li><p>这样，当使用 <code>hexo new title</code>创建文章时，将同时在 <strong>source/_post 文件夹</strong>中生成一个与 title 同名的文件夹，我们只需将图片放进此文件夹中，然后在文章中通过 Markdown 语法进行引用即可</p>
</li>
</ol>
<p>例如，在资源文件夹（就是那个与 title 同名的文件夹）中添加图片 example.png，则可以在对应的文章中使用语句 <code>![示例文字](title/example.png)</code> 添加图片</p>
<p>其实这对应上述的添加本地文件</p>
</li>
</ul>
<hr>
<h3 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h3><p>个人运用较少，直接上语法：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">|  表头   | 表头  |</span><br><span class="line">|  ----  | ----  |</span><br><span class="line">| 单元格  | 单元格 |</span><br><span class="line">| 单元格  | 单元格 |</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th>表头</th>
<th>表头</th>
</tr>
</thead>
<tbody><tr>
<td>单元格</td>
<td>单元格</td>
</tr>
<tr>
<td>单元格</td>
<td>单元格</td>
</tr>
</tbody></table>
<p>还可以对表格的对齐方式进行设置：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">| 左对齐 | 右对齐 | 居中对齐 |</span><br><span class="line">| :-----| ----: | :----: |</span><br><span class="line">| 单元格 | 单元格 | 单元格 |</span><br><span class="line">| 单元格 | 单元格 | 单元格 |</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th align="left">左对齐</th>
<th align="right">右对齐</th>
<th align="center">居中对齐</th>
</tr>
</thead>
<tbody><tr>
<td align="left">单元格</td>
<td align="right">单元格</td>
<td align="center">单元格</td>
</tr>
<tr>
<td align="left">单元格</td>
<td align="right">单元格</td>
<td align="center">单元格</td>
</tr>
</tbody></table>
<hr>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>学习</tag>
        <tag>教程</tag>
        <tag>markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>对于博客在hexo的next主题下的简单使用</title>
    <url>/2020/03/12/SipmleUse/</url>
    <content><![CDATA[<p><strong>注：</strong>当前文章在已经用hexo和github搭好的博客，以及next的主题优化的前提下进行</p>
<h3 id="文章的创建"><a href="#文章的创建" class="headerlink" title="文章的创建"></a>文章的创建</h3><p>当我们突发奇想，或者遇到奇事想分享时，就可以在个人博客中发表文章，首先是要创建文章</p>
<p>在站点文件夹中打开 git bash，输入如下命令，其中<code>title</code>是文章的标题<a id="more"></a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"title"</span></span><br></pre></td></tr></table></figure>

<p>输入命令后，就会在<code>source/_post</code>文件夹下创建一个md文件，命名为title.md</p>
<h3 id="文章的编写"><a href="#文章的编写" class="headerlink" title="文章的编写"></a>文章的编写</h3><p>创建好文件后，我们在文件进行内容的编写，首先要明白Markdown的语法，关于Markdown的使用，将另外进行发表。</p>
<h3 id="文章的头部"><a href="#文章的头部" class="headerlink" title="文章的头部"></a>文章的头部</h3><p>在我们创建好的md文件中，我们需要有对文章内容进行说明的文字，称为文章头部</p>
<p>文章的头部除了可以设置标题、发布日期等基础信息，还可以添加标签、分类等</p>
<p>以下是我进行next主题优化后所需要的文章头部的内容</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">title: 文章名</span><br><span class="line">categories: 分类名</span><br><span class="line">tags: </span><br><span class="line">	- 标签一</span><br><span class="line">	- 标签二</span><br><span class="line">copyright: <span class="literal">true</span> <span class="comment">#文章版权说明</span></span><br><span class="line">top: 1 <span class="comment">#数字越大文章越靠前</span></span><br></pre></td></tr></table></figure>

<p><strong>注：</strong>属性和属性值之间必须有一个空格，否则会解析错误</p>
<h3 id="文章的发布"><a href="#文章的发布" class="headerlink" title="文章的发布"></a>文章的发布</h3><p>一切就绪后，就该开开心心的发表文章了</p>
<p>在站点文件夹中打开git bash，输入如下命令即可发布</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo g -d</span><br></pre></td></tr></table></figure>

<p><strong>个人建议</strong>：在使用 <code>hexo g</code> 命令后，先使用 <code>hexo s</code> 命令，运行本地站点，然后在<a href="http://lacolhost:4000/" target="_blank" rel="noopener">http://lacolhost:4000/</a> 查看运行结果，感觉十分完美后再使用 <code>hexo d</code> 发布</p>
<p><strong>注：</strong>在我们对博客首页的文章进行精简显示后，我们可以在文章中使用<code>&lt;!--more--&gt;</code>标签，则表示文章只会显示标签前面的内容</p>
<hr>
]]></content>
      <categories>
        <category>博客</category>
      </categories>
      <tags>
        <tag>个人</tag>
        <tag>学习</tag>
      </tags>
  </entry>
</search>
